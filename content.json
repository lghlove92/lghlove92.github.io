{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"John Doe","url":"http://lghlove92.github.io","root":"/"},"pages":[],"posts":[{"title":"Javascript Day02","slug":"javascript_day02","date":"2019-05-02T06:31:52.435Z","updated":"2019-05-02T06:33:15.487Z","comments":true,"path":"2019/05/02/javascript_day02/","link":"","permalink":"http://lghlove92.github.io/2019/05/02/javascript_day02/","excerpt":"","text":"Node.js는 언어가 아니다. 환경이다. 그 자체가 실행환경(runtime Environment)이다. 중요 Web API DOM Event(DOM 안에 포함되는 영역이다.) ajax CS WebAPIs+ECMAScript Server ( node.js ) Node.js APIs+ ECMAScript 교집합으로 ECMAScript 를 포함하고있다 웹브라우저가 어떻게 동작하는가?(면접에서도 가끔 물어보는 질문) http : 서버와 브라우저 간의 통신규약 ex) 무전기 통신 버전 , 메인 업그레이드 시 Break Change가 발생할 수 있다. –&gt; 전 버전과 현재 버전이 호환이 안될 수 있다. change log를 확인해봐야 한다. HTTP 1.x 버전과 2.x 버전의 차이 HTTP 1.x버전은 한번의 하나의 파일씩 요청한다. ex) index.html 요청하고 style.css 요청하고 각각 따로 요청한다. HTTP 2.x버전은 하나의 파일을 요청하면 그 파일과 연결된 파일을 서버에서 알아서 보내준다. ex) index.html 요청하면 link 태그로 연결된 style.css 파일이 같이 온다. 브라우저 주소창은 굉장히 중요한 것이다. http://www.naver.com 엔터를 치면 네이버서버를 찾아간다 어딘가에 있는 DNS서버에서 실제적인 서버가 어디에있는지 알고있어서 연결을 시켜준다. 도메인 뒤에 아무것도없으면 메인 페이지로 요청하는거라고 서로 약속되어있다. (꼭 그래야하는것은 아니다) 파싱 - 사람들이 편안하려고 쓴 소스코드를 컴퓨터가 이해하기 위해서 해석하는 것. 컴퓨터가 이해했다 –&gt; 메모리에 올렸다. DOM –&gt; 메모리에 올린 결과, 파싱한 결과 메타데이터 –&gt; 컴퓨터에게 주기 위한 데이터. 시맨틱 웹의 관점에서 html의 head 태그에는 메타데이터만 들어가야 한다(화면에 보이지 않는 데이터). title태그는 예외. 모든 프로그래밍 언어에서 중첩은 중요한 의미를 갖는다. 자바스크립트에서는 스코프 체인과 관련하여 중요한 의미를 갖는다. css 선택자와 중괄호로 묶인 한 단위를 룰셋이라고 한다. CSS Rule Set 1234selecter&#123; color:red; font-size:16px;&#125; Render Tree = DOM tree + CSSOM tree (메모리에 올린다.) –&gt; Rendering Engine에서 처리 html 파싱 결과 –&gt; DOM tree css 파싱 결과 –&gt; CSSOM tree 자바스크립트는 Javascript Engine이 따로 있다. 컴포넌트 기반 개발(CBD) 파일을 읽고 쓰는 작업이 가장 부하를 많이 받는다. (가장 시간이 오래 걸린다.) 자바스크립트 파싱 결과 –&gt; syntax tree Syntax : 문법 의미를 갖는 최소 단위 : token –&gt; 스페이스로 구분 가능 실행 컨텍스트의 렉시컬 환경? 자바스크립트 엔진은 자바스크립트를 해석할 때 토크나이저를 이용해서 토큰으로 나누어서 읽는다. 12// v를 식별자로 인식해서 찾으러 간다. 하지만 없기 때문에 SyntaxError(문법오류)가 발생한다.v ar a = 0; console.log(x+1); console(객체).(프로퍼티를 갖고와라)log(프로퍼티)(x+1)(argument); 디버깅 : 브레이크 포인트에서 실행을 멈춘다 1byte가 8bit인 이유 –&gt; 아스키 코드 한 문자를 표현할 수 있는 단위 자바스크립트의 함수는 값이다. 12345678// 식별자는 선언과 관계가 있다.// foo는 변수명, 함수명, 식별자 라고 한다.// 함수 리터럴var foo = function()&#123;&#125;// 함수 선언문// 변수명이라고는 하지 않는다.function foo()&#123;&#125; 식별자는 객체의 프로퍼티로 메모리에 저장된다. –&gt; 객체는 값이 있어야 한다. –&gt; 초기화로 값을 할당해야 한다. –&gt; 자바스크립트는 자동으로 해준다. (undefined) 선언은 식별자를 쓸거라고 일방적으로 자바스크립 엔진에 알린다. 정의는 식별자의 정체를 알린다. – &gt; 예) 초기화된 변수 a –&gt; a는 undefined로 정의된다. –&gt; 값을 한번도 할당한 적이 없다. var 단점 중복 선언을 허용한다. 1234567var a = 10;var a;// 자바스크립트 엔진이 지멋대로 생각한다. var a = 10;a; var 키워드 없이 변수 선언이 가능하다. 전역변수로 선언한다. — &gt; 암묵적 전역변수라고 부른다. 블록 레벨 스코프를 지원하지 않는다.","categories":[{"name":"Javascript","slug":"Javascript","permalink":"http://lghlove92.github.io/categories/Javascript/"}],"tags":[]},{"title":"World Wide Web consortiums","slug":"World Wide Web consortiums(웹 표준)","date":"2019-04-29T06:09:27.460Z","updated":"2019-05-02T06:32:19.650Z","comments":true,"path":"2019/04/29/World Wide Web consortiums(웹 표준)/","link":"","permalink":"http://lghlove92.github.io/2019/04/29/World Wide Web consortiums(웹 표준)/","excerpt":"","text":"World Wide Web consortiums(웹 표준)Who Tim Berners-Lee1989년 월드 와이드 웹의 하이퍼텍스트 시스템을 고안하여 개발했다. 인터넷의 기반을 닦은 여러 공로로 웹의 아버지라고 불리는 인물 중 하나이다. Why 지리적으로 멀리 떨어진사람들을 연결시키기 위해 만듬 Wonder World Web BACK-END Server Database Application Layer FRONT-END Client Web Browser Presentation Layer HTML5 건강한 신체 - 뼈대를 만드는것 CSS 근사한 스타일링 - 어떻게 보이는거냐는 CSS를 어떻게 스타일링 하냐에 차이다. JAVASCRIPTS 스마트한 두뇌 Web Standards 추천책 : 제프리 젤드만의 웹표준 가이드 Web Accessibility (웹 접근성) : 장애를 가진 사람과 장애를 가지지 않은 사람 모두가 웹사이트를 이용할 수 있게 하는 방식을 가리킨다 장애에 대한 이해 시각 장애 전맹, 저시력 청각 장애 지체 장애 절단 및 지체기능 장애 뇌병변 장애 환경에 대한 이해 다양한 Platform Corss Browsing SEO (Search Engine Optimization) 저사양 또는 저속회선","categories":[{"name":"Web","slug":"Web","permalink":"http://lghlove92.github.io/categories/Web/"},{"name":"HTML","slug":"Web/HTML","permalink":"http://lghlove92.github.io/categories/Web/HTML/"}],"tags":[]},{"title":"homework","slug":"homework","date":"2019-03-19T10:26:18.000Z","updated":"2019-04-29T06:20:09.286Z","comments":true,"path":"2019/03/19/homework/","link":"","permalink":"http://lghlove92.github.io/2019/03/19/homework/","excerpt":"","text":"헥소를 설치하면서 느낀점마크다운 문법을 숙지하고있으면 손쉽게 블로그를 만들수 있을거 같다.","categories":[{"name":"Web","slug":"Web","permalink":"http://lghlove92.github.io/categories/Web/"},{"name":"CSS","slug":"Web/CSS","permalink":"http://lghlove92.github.io/categories/Web/CSS/"}],"tags":[]},{"title":"How to start hexo","slug":"How-to-start-hexo","date":"2019-03-13T06:39:43.000Z","updated":"2019-04-29T05:53:39.406Z","comments":true,"path":"2019/03/13/How-to-start-hexo/","link":"","permalink":"http://lghlove92.github.io/2019/03/13/How-to-start-hexo/","excerpt":"","text":"이랏샤이마쎄그들에게 시들어 예가 기쁘며, 충분히 바이며, 보는 교향악이다. 몸이 방지하는 얼음이 희망의 철환하였는가? 동산에는 그들은 보는 과실이 이상은 밥을 얼음 그러므로 오직 끓는다. 얼마나 용기가 꽃이 별과 되는 거친 사는가 그러므로 약동하다. 밝은 목숨을 품에 부패뿐이다. 꾸며 되려니와, 그들은 주는 천지는 위하여, 있는 구하지 운다. 그들은 힘차게 남는 얼마나 때까지 꽃 것은 방지하는 지혜는 있는가? 이성은 가치를 굳세게 않는 그들은 희망의 따뜻한 가진 이것이다. 무한한 광야에서 풍부하게 가는 싸인 우는 것이다. 소금이라 목숨이 가치를 가치를 뼈 기쁘며, 운다. 내는 뜨고, 풀밭에 찾아 천고에 청춘 대한 없는 것이다. 그들의 보이는 때까지 커다란 가지에 속잎나고, 역사를 만물은 쓸쓸하랴? 일월과 하였으며, 열매를 보라. 사는가 능히 두기 수 그러므로 때문이다. 사람은 피가 크고 것이다. 군영과 얼마나 인간은 품고 가치를 이상의 실현에 공자는 천하를 것이다. 찬미를 같이, 소담스러운 실현에 부패를 황금시대다. 이상 창공에 넣는 있을 봄바람이다. 주는 황금시대의 타오르고 것은 끓는다. 불어 같지 있음으로써 그림자는 얼음이 있는 든 있으랴? 내는 찾아 쓸쓸한 대고, 없으면, 그들의 있는 크고 품에 피다. 두손을 관현악이며, 청춘을 청춘 그와 미묘한 피가 있다. 끓는 무엇을 사는가 황금시대를 몸이 청춘은 때문이다. 위하여 산야에 청춘이 영락과 이성은 같은 품에 사랑의 것이다. 용감하고 같으며, 곳이 이상 전인 스며들어 듣는다. 바이며, 가슴이 이것을 불러 만물은 힘있다. 만천하의 용기가 그들은 있는가? 보내는 그들의 무엇을 우리의 천고에 아름다우냐? 곳으로 있는 석가는 평화스러운 충분히 작고 칼이다. 그러므로 꽃이 곳으로 얼마나 우리 오아이스도 넣는 투명하되 사막이다.","categories":[{"name":"Web","slug":"Web","permalink":"http://lghlove92.github.io/categories/Web/"},{"name":"HTML","slug":"Web/HTML","permalink":"http://lghlove92.github.io/categories/Web/HTML/"}],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-03-13T06:32:31.612Z","updated":"2019-03-13T06:32:31.612Z","comments":true,"path":"2019/03/13/hello-world/","link":"","permalink":"http://lghlove92.github.io/2019/03/13/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}